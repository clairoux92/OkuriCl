// Generated by view binder compiler. Do not edit!
package com.example.okuri.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.okuri.R;
import com.google.android.material.bottomnavigation.BottomNavigationView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityNotificationsBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView imageView25;

  @NonNull
  public final ImageView imageView26;

  @NonNull
  public final ImageView imageView27;

  @NonNull
  public final ImageView imageView32;

  @NonNull
  public final ImageView imageView33;

  @NonNull
  public final ImageView imageView34;

  @NonNull
  public final ImageView imageView35;

  @NonNull
  public final BottomNavigationView navp;

  private ActivityNotificationsBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView imageView25, @NonNull ImageView imageView26,
      @NonNull ImageView imageView27, @NonNull ImageView imageView32,
      @NonNull ImageView imageView33, @NonNull ImageView imageView34,
      @NonNull ImageView imageView35, @NonNull BottomNavigationView navp) {
    this.rootView = rootView;
    this.imageView25 = imageView25;
    this.imageView26 = imageView26;
    this.imageView27 = imageView27;
    this.imageView32 = imageView32;
    this.imageView33 = imageView33;
    this.imageView34 = imageView34;
    this.imageView35 = imageView35;
    this.navp = navp;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityNotificationsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityNotificationsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_notifications, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityNotificationsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.imageView25;
      ImageView imageView25 = ViewBindings.findChildViewById(rootView, id);
      if (imageView25 == null) {
        break missingId;
      }

      id = R.id.imageView26;
      ImageView imageView26 = ViewBindings.findChildViewById(rootView, id);
      if (imageView26 == null) {
        break missingId;
      }

      id = R.id.imageView27;
      ImageView imageView27 = ViewBindings.findChildViewById(rootView, id);
      if (imageView27 == null) {
        break missingId;
      }

      id = R.id.imageView32;
      ImageView imageView32 = ViewBindings.findChildViewById(rootView, id);
      if (imageView32 == null) {
        break missingId;
      }

      id = R.id.imageView33;
      ImageView imageView33 = ViewBindings.findChildViewById(rootView, id);
      if (imageView33 == null) {
        break missingId;
      }

      id = R.id.imageView34;
      ImageView imageView34 = ViewBindings.findChildViewById(rootView, id);
      if (imageView34 == null) {
        break missingId;
      }

      id = R.id.imageView35;
      ImageView imageView35 = ViewBindings.findChildViewById(rootView, id);
      if (imageView35 == null) {
        break missingId;
      }

      id = R.id.navp;
      BottomNavigationView navp = ViewBindings.findChildViewById(rootView, id);
      if (navp == null) {
        break missingId;
      }

      return new ActivityNotificationsBinding((ConstraintLayout) rootView, imageView25, imageView26,
          imageView27, imageView32, imageView33, imageView34, imageView35, navp);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
